// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace RRHH_Backend.Domain.RRHH;

public partial class sigafi_esContext : DbContext
{
    public sigafi_esContext(DbContextOptions<sigafi_esContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CampoAmplioUnesco> CampoAmplioUnesco { get; set; }

    public virtual DbSet<CampoDetalladoUnesco> CampoDetalladoUnesco { get; set; }

    public virtual DbSet<CampoEspecificoUnesco> CampoEspecificoUnesco { get; set; }

    public virtual DbSet<CategoriasContratos> CategoriasContratos { get; set; }

    public virtual DbSet<Ciudades> Ciudades { get; set; }

    public virtual DbSet<Contratos> Contratos { get; set; }

    public virtual DbSet<CursosProfesores> CursosProfesores { get; set; }

    public virtual DbSet<Dedicacion> Dedicacion { get; set; }

    public virtual DbSet<Discapacidades> Discapacidades { get; set; }

    public virtual DbSet<EstadoCivil> EstadoCivil { get; set; }

    public virtual DbSet<Etnias> Etnias { get; set; }

    public virtual DbSet<FinanciamientoBeca> FinanciamientoBeca { get; set; }

    public virtual DbSet<GradosAcademicos> GradosAcademicos { get; set; }

    public virtual DbSet<Nacionalidades> Nacionalidades { get; set; }

    public virtual DbSet<NivelesAcademicos> NivelesAcademicos { get; set; }

    public virtual DbSet<Paises> Paises { get; set; }

    public virtual DbSet<Parroquias> Parroquias { get; set; }

    public virtual DbSet<Periodos> Periodos { get; set; }

    public virtual DbSet<Profesores> Profesores { get; set; }

    public virtual DbSet<Provincias> Provincias { get; set; }

    public virtual DbSet<RelacionIes> RelacionIes { get; set; }

    public virtual DbSet<TipoFuncionario> TipoFuncionario { get; set; }

    public virtual DbSet<TipoSangre> TipoSangre { get; set; }

    public virtual DbSet<TiposBecas> TiposBecas { get; set; }

    public virtual DbSet<TiposContratos> TiposContratos { get; set; }

    public virtual DbSet<TitulosEnCurso> TitulosEnCurso { get; set; }

    public virtual DbSet<TitulosProfesores> TitulosProfesores { get; set; }

    public virtual DbSet<Universidades> Universidades { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("latin1_swedish_ci")
            .HasCharSet("latin1");

        modelBuilder.Entity<CampoAmplioUnesco>(entity =>
        {
            entity.HasKey(e => e.IdCampoAmplioUnesco).HasName("PRIMARY");

            entity.ToTable("campo_amplio_unesco");

            entity.Property(e => e.IdCampoAmplioUnesco)
                .HasColumnType("int(11)")
                .HasColumnName("idCampoAmplioUnesco");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("'1'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("activo");
            entity.Property(e => e.CodigoAmplio)
                .HasMaxLength(10)
                .HasColumnName("codigoAmplio");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<CampoDetalladoUnesco>(entity =>
        {
            entity.HasKey(e => e.IdCampoDetalladoUnesco).HasName("PRIMARY");

            entity.ToTable("campo_detallado_unesco");

            entity.HasIndex(e => e.IdCampospecificoUnesco, "fk_campo_detallado_unesco_campo_especifico_unesco1_idx");

            entity.Property(e => e.IdCampoDetalladoUnesco)
                .HasColumnType("int(11)")
                .HasColumnName("idCampoDetalladoUnesco");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("'1'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("activo");
            entity.Property(e => e.CodigoDetallado)
                .HasMaxLength(10)
                .HasColumnName("codigoDetallado");
            entity.Property(e => e.IdCampospecificoUnesco)
                .HasColumnType("int(11)")
                .HasColumnName("idCampospecificoUnesco");
            entity.Property(e => e.NombreDetallado)
                .HasMaxLength(100)
                .HasColumnName("nombreDetallado");

            entity.HasOne(d => d.IdCampospecificoUnescoNavigation).WithMany(p => p.CampoDetalladoUnesco)
                .HasForeignKey(d => d.IdCampospecificoUnesco)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_campo_detallado_unesco_campo_especifico_unesco1");
        });

        modelBuilder.Entity<CampoEspecificoUnesco>(entity =>
        {
            entity.HasKey(e => e.IdCampospecificoUnesco).HasName("PRIMARY");

            entity.ToTable("campo_especifico_unesco");

            entity.HasIndex(e => e.IdCampoAmplioUnesco, "fk_campo_especifico_unesco_campo_amplio_unesco1_idx");

            entity.Property(e => e.IdCampospecificoUnesco)
                .HasColumnType("int(11)")
                .HasColumnName("idCampospecificoUnesco");
            entity.Property(e => e.Activo)
                .HasDefaultValueSql("'1'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("activo");
            entity.Property(e => e.CodigoEspecifico)
                .HasMaxLength(10)
                .HasColumnName("codigoEspecifico");
            entity.Property(e => e.IdCampoAmplioUnesco)
                .HasColumnType("int(11)")
                .HasColumnName("idCampoAmplioUnesco");
            entity.Property(e => e.NombreEspecifico)
                .HasMaxLength(100)
                .HasColumnName("nombreEspecifico");

            entity.HasOne(d => d.IdCampoAmplioUnescoNavigation).WithMany(p => p.CampoEspecificoUnesco)
                .HasForeignKey(d => d.IdCampoAmplioUnesco)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_campo_especifico_unesco_campo_amplio_unesco1");
        });

        modelBuilder.Entity<CategoriasContratos>(entity =>
        {
            entity.HasKey(e => e.IdCategoria).HasName("PRIMARY");

            entity.ToTable("categorias_contratos");

            entity.Property(e => e.IdCategoria)
                .HasColumnType("int(11)")
                .HasColumnName("idCategoria");
            entity.Property(e => e.Nombre)
                .HasMaxLength(45)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Ciudades>(entity =>
        {
            entity.HasKey(e => e.Idciudades).HasName("PRIMARY");

            entity.ToTable("ciudades");

            entity.HasIndex(e => e.Idprovincias, "fk_cuidades_provincias1_idx");

            entity.Property(e => e.Idciudades)
                .HasColumnType("int(11)")
                .HasColumnName("idciudades");
            entity.Property(e => e.Idprovincias)
                .HasColumnType("int(11)")
                .HasColumnName("idprovincias");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdprovinciasNavigation).WithMany(p => p.Ciudades)
                .HasForeignKey(d => d.Idprovincias)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_cuidades_provincias1");
        });

        modelBuilder.Entity<Contratos>(entity =>
        {
            entity.HasKey(e => e.IdContratro).HasName("PRIMARY");

            entity.ToTable("contratos");

            entity.HasIndex(e => e.IdCategoria, "fk_contratos_categorias_contratos1_idx");

            entity.HasIndex(e => e.IdRelacionIes, "fk_contratos_relacion_ies1_idx");

            entity.HasIndex(e => e.TipoFuncionario, "fk_contratos_tipo_funcionario1_idx");

            entity.HasIndex(e => e.IdDedicacion, "fk_contratros_Dedicacion1_idx");

            entity.HasIndex(e => e.IdProfesor, "fk_contratros_profesores1_idx");

            entity.HasIndex(e => e.TipoContrato, "fk_contratros_tipos_contratos1_idx");

            entity.Property(e => e.IdContratro)
                .HasColumnType("int(11)")
                .HasColumnName("idContratro");
            entity.Property(e => e.ArchivoContrato)
                .HasMaxLength(255)
                .HasColumnName("archivoContrato");
            entity.Property(e => e.ArchivoFiniquito)
                .HasMaxLength(255)
                .HasColumnName("archivoFiniquito");
            entity.Property(e => e.ArchivoLegalizado)
                .HasMaxLength(255)
                .HasColumnName("archivoLegalizado");
            entity.Property(e => e.ArchivoLegalizadoSalida)
                .HasMaxLength(255)
                .HasColumnName("archivoLegalizadoSalida");
            entity.Property(e => e.ContratoVinculado)
                .HasMaxLength(45)
                .HasColumnName("contratoVinculado");
            entity.Property(e => e.EsActivo)
                .HasColumnType("tinyint(4)")
                .HasColumnName("esActivo");
            entity.Property(e => e.EsAdendum)
                .HasColumnType("tinyint(4)")
                .HasColumnName("esAdendum");
            entity.Property(e => e.FechaFinal).HasColumnName("fecha_final");
            entity.Property(e => e.FechaInicio).HasColumnName("fecha_inicio");
            entity.Property(e => e.FechaRegistro).HasColumnName("fecha_registro");
            entity.Property(e => e.IdCategoria)
                .HasColumnType("int(11)")
                .HasColumnName("idCategoria");
            entity.Property(e => e.IdDedicacion)
                .HasColumnType("int(11)")
                .HasColumnName("idDedicacion");
            entity.Property(e => e.IdProfesor)
                .IsRequired()
                .HasMaxLength(14)
                .HasColumnName("idProfesor");
            entity.Property(e => e.IdRelacionIes)
                .HasColumnType("int(11)")
                .HasColumnName("idRelacionIes");
            entity.Property(e => e.IngresoConcurso)
                .HasColumnType("tinyint(4)")
                .HasColumnName("ingreso_concurso");
            entity.Property(e => e.NumeroContrato)
                .HasMaxLength(45)
                .HasColumnName("numeroContrato");
            entity.Property(e => e.Sueldo)
                .HasPrecision(10, 2)
                .HasColumnName("sueldo");
            entity.Property(e => e.TipoContrato).HasColumnType("int(11)");
            entity.Property(e => e.TipoFuncionario)
                .HasColumnType("int(11)")
                .HasColumnName("tipo_funcionario");

            entity.HasOne(d => d.IdCategoriaNavigation).WithMany(p => p.Contratos)
                .HasForeignKey(d => d.IdCategoria)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_contratos_categorias_contratos1");

            entity.HasOne(d => d.IdDedicacionNavigation).WithMany(p => p.Contratos)
                .HasForeignKey(d => d.IdDedicacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_contratros_Dedicacion1");

            entity.HasOne(d => d.IdProfesorNavigation).WithMany(p => p.Contratos)
                .HasForeignKey(d => d.IdProfesor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_contratros_profesores1");

            entity.HasOne(d => d.IdRelacionIesNavigation).WithMany(p => p.Contratos)
                .HasForeignKey(d => d.IdRelacionIes)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_contratos_relacion_ies1");

            entity.HasOne(d => d.TipoContratoNavigation).WithMany(p => p.Contratos)
                .HasForeignKey(d => d.TipoContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_contratros_tipos_contratos1");

            entity.HasOne(d => d.TipoFuncionarioNavigation).WithMany(p => p.Contratos)
                .HasForeignKey(d => d.TipoFuncionario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_contratos_tipo_funcionario1");
        });

        modelBuilder.Entity<CursosProfesores>(entity =>
        {
            entity.HasKey(e => e.IdCursoProfesor).HasName("PRIMARY");

            entity.ToTable("cursos_profesores");

            entity.HasIndex(e => e.IdProfesor, "fk_cursos_profesores_profesores1_idx");

            entity.Property(e => e.IdCursoProfesor)
                .HasColumnType("int(11)")
                .HasColumnName("idCursoProfesor");
            entity.Property(e => e.ArchivoCurso)
                .HasMaxLength(255)
                .HasColumnName("archivoCurso");
            entity.Property(e => e.EsValido)
                .HasColumnType("tinyint(4)")
                .HasColumnName("esValido");
            entity.Property(e => e.FechaFinalizacion).HasColumnName("fecha_finalizacion");
            entity.Property(e => e.FechaInicio).HasColumnName("fecha_inicio");
            entity.Property(e => e.IdProfesor)
                .IsRequired()
                .HasMaxLength(14)
                .HasColumnName("idProfesor");
            entity.Property(e => e.Institucion).HasMaxLength(200);
            entity.Property(e => e.NombreCurso)
                .HasMaxLength(255)
                .HasColumnName("nombre_curso");
            entity.Property(e => e.NumeroHoras)
                .HasColumnType("int(11)")
                .HasColumnName("numero_horas");

            entity.HasOne(d => d.IdProfesorNavigation).WithMany(p => p.CursosProfesores)
                .HasForeignKey(d => d.IdProfesor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_cursos_profesores_profesores1");
        });

        modelBuilder.Entity<Dedicacion>(entity =>
        {
            entity.HasKey(e => e.IdDedicacion).HasName("PRIMARY");

            entity.ToTable("dedicacion");

            entity.Property(e => e.IdDedicacion)
                .HasColumnType("int(11)")
                .HasColumnName("idDedicacion");
            entity.Property(e => e.Nombre)
                .HasMaxLength(45)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Discapacidades>(entity =>
        {
            entity.HasKey(e => e.IdDiscapacidad).HasName("PRIMARY");

            entity.ToTable("discapacidades");

            entity.Property(e => e.IdDiscapacidad)
                .HasColumnType("int(11)")
                .HasColumnName("idDiscapacidad");
            entity.Property(e => e.Discapacidad)
                .HasMaxLength(30)
                .HasColumnName("discapacidad");
            entity.Property(e => e.EsDefecto)
                .HasDefaultValueSql("'0'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("esDefecto");
        });

        modelBuilder.Entity<EstadoCivil>(entity =>
        {
            entity.HasKey(e => e.IdestadoCivil).HasName("PRIMARY");

            entity.ToTable("estadoCivil");

            entity.Property(e => e.IdestadoCivil)
                .HasColumnType("int(11)")
                .HasColumnName("idestadoCivil");
            entity.Property(e => e.Nombre)
                .HasMaxLength(45)
                .HasColumnName("nombre");
            entity.Property(e => e.RequiereConyuge)
                .HasColumnType("tinyint(4)")
                .HasColumnName("requiereConyuge");
        });

        modelBuilder.Entity<Etnias>(entity =>
        {
            entity.HasKey(e => e.IdEtnia).HasName("PRIMARY");

            entity.ToTable("etnias");

            entity.Property(e => e.IdEtnia)
                .HasColumnType("int(11)")
                .HasColumnName("idEtnia");
            entity.Property(e => e.EsIndigena)
                .HasColumnType("tinyint(4)")
                .HasColumnName("esIndigena");
            entity.Property(e => e.Etnia)
                .HasMaxLength(30)
                .HasColumnName("etnia");
            entity.Property(e => e.NoRegistra)
                .HasDefaultValueSql("'0'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("noRegistra");
        });

        modelBuilder.Entity<FinanciamientoBeca>(entity =>
        {
            entity.HasKey(e => e.IdFinanciamiento).HasName("PRIMARY");

            entity.ToTable("financiamiento_beca");

            entity.Property(e => e.IdFinanciamiento)
                .HasColumnType("int(11)")
                .HasColumnName("idFinanciamiento");
            entity.Property(e => e.Nombre)
                .HasMaxLength(60)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<GradosAcademicos>(entity =>
        {
            entity.HasKey(e => e.IdGradoAcademico).HasName("PRIMARY");

            entity.ToTable("grados_academicos");

            entity.HasIndex(e => e.IdNivelAcademico, "fk_grados_academicos_niveles_academicos1_idx");

            entity.Property(e => e.IdGradoAcademico)
                .HasColumnType("int(11)")
                .HasColumnName("idGradoAcademico");
            entity.Property(e => e.IdNivelAcademico)
                .HasColumnType("int(11)")
                .HasColumnName("idNivelAcademico");
            entity.Property(e => e.Nombre)
                .HasMaxLength(45)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdNivelAcademicoNavigation).WithMany(p => p.GradosAcademicos)
                .HasForeignKey(d => d.IdNivelAcademico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_grados_academicos_niveles_academicos1");
        });

        modelBuilder.Entity<Nacionalidades>(entity =>
        {
            entity.HasKey(e => e.IdNacionalidad).HasName("PRIMARY");

            entity.ToTable("nacionalidades");

            entity.Property(e => e.IdNacionalidad)
                .HasColumnType("int(11)")
                .HasColumnName("idNacionalidad");
            entity.Property(e => e.EsNinguna)
                .HasDefaultValueSql("'0'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("esNinguna");
            entity.Property(e => e.Nacionalidad)
                .HasMaxLength(30)
                .HasColumnName("nacionalidad");
        });

        modelBuilder.Entity<NivelesAcademicos>(entity =>
        {
            entity.HasKey(e => e.IdNivelAcademico).HasName("PRIMARY");

            entity.ToTable("niveles_academicos");

            entity.Property(e => e.IdNivelAcademico)
                .HasColumnType("int(11)")
                .HasColumnName("idNivelAcademico");
            entity.Property(e => e.Nombre)
                .HasMaxLength(60)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Paises>(entity =>
        {
            entity.HasKey(e => e.Idpaises).HasName("PRIMARY");

            entity.ToTable("paises");

            entity.Property(e => e.Idpaises)
                .HasColumnType("int(11)")
                .HasColumnName("idpaises");
            entity.Property(e => e.EsEcuador)
                .HasColumnType("tinyint(4)")
                .HasColumnName("esEcuador");
            entity.Property(e => e.Nacionalidad)
                .HasMaxLength(100)
                .HasColumnName("nacionalidad");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Parroquias>(entity =>
        {
            entity.HasKey(e => e.IdParroquias).HasName("PRIMARY");

            entity.ToTable("parroquias");

            entity.HasIndex(e => e.Idciudades, "fk_parroquias_cuidades1_idx");

            entity.Property(e => e.IdParroquias)
                .HasColumnType("int(11)")
                .HasColumnName("idParroquias");
            entity.Property(e => e.Idciudades)
                .HasColumnType("int(11)")
                .HasColumnName("idciudades");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdciudadesNavigation).WithMany(p => p.Parroquias)
                .HasForeignKey(d => d.Idciudades)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_parroquias_ciudades1");
        });

        modelBuilder.Entity<Periodos>(entity =>
        {
            entity.HasKey(e => e.IdPeriodo).HasName("PRIMARY");

            entity.ToTable("periodos");

            entity.Property(e => e.IdPeriodo)
                .HasMaxLength(7)
                .HasDefaultValueSql("''")
                .IsFixedLength()
                .HasColumnName("idPeriodo");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Cerrado).HasColumnName("cerrado");
            entity.Property(e => e.Creditos).HasColumnName("creditos");
            entity.Property(e => e.Detalle)
                .HasMaxLength(100)
                .HasColumnName("detalle");
            entity.Property(e => e.FechaFinal).HasColumnName("fecha_final");
            entity.Property(e => e.FechaInicial).HasColumnName("fecha_inicial");
            entity.Property(e => e.FechaMatruclaExtraordinaria).HasColumnName("fecha_matrucla_extraordinaria");
            entity.Property(e => e.FechaMaximaAutocierre).HasColumnName("fecha_maxima_autocierre");
            entity.Property(e => e.Foliop)
                .HasColumnType("int(11)")
                .HasColumnName("foliop");
            entity.Property(e => e.IngresoCalificaciones)
                .HasDefaultValueSql("'0'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("ingresoCalificaciones");
            entity.Property(e => e.NumeroPagos)
                .HasColumnType("int(10) unsigned")
                .HasColumnName("numero_pagos");
            entity.Property(e => e.Periodoactivoinstituto)
                .HasDefaultValueSql("'0'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("periodoactivoinstituto");
            entity.Property(e => e.PermiteCalificacionesInstituto)
                .HasDefaultValueSql("'0'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("permiteCalificacionesInstituto");
            entity.Property(e => e.PermiteMatricula)
                .HasDefaultValueSql("'0'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("permiteMatricula");
            entity.Property(e => e.VisualizaPowerBi)
                .HasDefaultValueSql("'0'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("visualizaPowerBi");
        });

        modelBuilder.Entity<Profesores>(entity =>
        {
            entity.HasKey(e => e.IdProfesor).HasName("PRIMARY");

            entity.ToTable("profesores");

            entity.HasIndex(e => e.IdDiscapacidad, "fk_profesores_discapacidades1_idx");

            entity.HasIndex(e => e.EstadoCivil, "fk_profesores_estadoCivil1_idx");

            entity.HasIndex(e => e.IdEtnia, "fk_profesores_etnias1_idx");

            entity.HasIndex(e => e.IdNacionalidad, "fk_profesores_nacionalidades1_idx");

            entity.HasIndex(e => e.IdParroquiaNacimiento, "fk_profesores_parroquias1_idx");

            entity.HasIndex(e => e.IdParroquiaResidencia, "fk_profesores_parroquias2_idx");

            entity.HasIndex(e => e.TipoSangre, "fk_profesores_tipoSangre1_idx");

            entity.Property(e => e.IdProfesor)
                .HasMaxLength(14)
                .HasColumnName("idProfesor");
            entity.Property(e => e.Abreviatura)
                .HasMaxLength(5)
                .HasColumnName("abreviatura");
            entity.Property(e => e.AbreviaturaPost)
                .HasMaxLength(5)
                .HasColumnName("abreviatura_post");
            entity.Property(e => e.Activo)
                .HasColumnType("tinyint(4)")
                .HasColumnName("activo");
            entity.Property(e => e.Celular)
                .HasMaxLength(20)
                .HasColumnName("celular");
            entity.Property(e => e.Clave)
                .HasMaxLength(20)
                .HasDefaultValueSql("'321'")
                .HasColumnName("clave");
            entity.Property(e => e.CodigoPostal)
                .HasMaxLength(20)
                .HasColumnName("codigoPostal");
            entity.Property(e => e.Direccion)
                .HasMaxLength(100)
                .HasColumnName("direccion");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasColumnName("email");
            entity.Property(e => e.EmailInstitucional)
                .HasMaxLength(255)
                .HasColumnName("emailInstitucional");
            entity.Property(e => e.EstadoCivil)
                .HasColumnType("int(11)")
                .HasColumnName("estadoCivil");
            entity.Property(e => e.FechaIngreso).HasColumnName("fecha_ingreso");
            entity.Property(e => e.FechaIngresoIess).HasColumnName("fechaIngresoIess");
            entity.Property(e => e.FechaNacimiento).HasColumnName("fecha_nacimiento");
            entity.Property(e => e.FechaRetiro).HasColumnName("fecha_retiro");
            entity.Property(e => e.Foto)
                .HasMaxLength(255)
                .HasColumnName("foto");
            entity.Property(e => e.IdDiscapacidad)
                .HasColumnType("int(11)")
                .HasColumnName("idDiscapacidad");
            entity.Property(e => e.IdEtnia)
                .HasColumnType("int(11)")
                .HasColumnName("idEtnia");
            entity.Property(e => e.IdNacionalidad)
                .HasColumnType("int(11)")
                .HasColumnName("idNacionalidad");
            entity.Property(e => e.IdParroquiaNacimiento)
                .HasColumnType("int(11)")
                .HasColumnName("idParroquiaNacimiento");
            entity.Property(e => e.IdParroquiaResidencia)
                .HasColumnType("int(11)")
                .HasColumnName("idParroquiaResidencia");
            entity.Property(e => e.NumeroConadis)
                .HasMaxLength(45)
                .HasColumnName("numeroConadis");
            entity.Property(e => e.PorcentajeDiscapacidad)
                .HasColumnType("int(11)")
                .HasColumnName("porcentajeDiscapacidad");
            entity.Property(e => e.Practicas)
                .HasDefaultValueSql("'0'")
                .HasColumnType("tinyint(4)")
                .HasColumnName("practicas");
            entity.Property(e => e.PrimerApellido)
                .HasMaxLength(60)
                .HasColumnName("primerApellido");
            entity.Property(e => e.PrimerNombre)
                .HasMaxLength(60)
                .HasColumnName("primerNombre");
            entity.Property(e => e.SegundoApellido)
                .HasMaxLength(60)
                .HasColumnName("segundoApellido");
            entity.Property(e => e.SegundoNombre)
                .HasMaxLength(60)
                .HasColumnName("segundoNombre");
            entity.Property(e => e.Sexo)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("sexo");
            entity.Property(e => e.Telefono)
                .HasMaxLength(30)
                .HasColumnName("telefono");
            entity.Property(e => e.Tipo)
                .HasMaxLength(1)
                .HasDefaultValueSql("'P'")
                .IsFixedLength()
                .HasColumnName("tipo");
            entity.Property(e => e.TipoSangre)
                .IsRequired()
                .HasMaxLength(5)
                .HasColumnName("tipoSangre");
            entity.Property(e => e.Tipodocumento)
                .HasMaxLength(1)
                .IsFixedLength()
                .HasColumnName("tipodocumento");

            entity.HasOne(d => d.EstadoCivilNavigation).WithMany(p => p.Profesores)
                .HasForeignKey(d => d.EstadoCivil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_profesores_estadoCivil1");

            entity.HasOne(d => d.IdDiscapacidadNavigation).WithMany(p => p.Profesores)
                .HasForeignKey(d => d.IdDiscapacidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_profesores_discapacidades1");

            entity.HasOne(d => d.IdEtniaNavigation).WithMany(p => p.Profesores)
                .HasForeignKey(d => d.IdEtnia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_profesores_etnias1");

            entity.HasOne(d => d.IdNacionalidadNavigation).WithMany(p => p.Profesores)
                .HasForeignKey(d => d.IdNacionalidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_profesores_nacionalidades1");

            entity.HasOne(d => d.IdParroquiaNacimientoNavigation).WithMany(p => p.ProfesoresIdParroquiaNacimientoNavigation)
                .HasForeignKey(d => d.IdParroquiaNacimiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_profesores_parroquias1");

            entity.HasOne(d => d.IdParroquiaResidenciaNavigation).WithMany(p => p.ProfesoresIdParroquiaResidenciaNavigation)
                .HasForeignKey(d => d.IdParroquiaResidencia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_profesores_parroquias2");

            entity.HasOne(d => d.TipoSangreNavigation).WithMany(p => p.Profesores)
                .HasForeignKey(d => d.TipoSangre)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_profesores_tipoSangre1");
        });

        modelBuilder.Entity<Provincias>(entity =>
        {
            entity.HasKey(e => e.Idprovincias).HasName("PRIMARY");

            entity.ToTable("provincias");

            entity.HasIndex(e => e.Idpaises, "fk_provincias_paises1_idx");

            entity.Property(e => e.Idprovincias)
                .HasColumnType("int(11)")
                .HasColumnName("idprovincias");
            entity.Property(e => e.Idpaises)
                .HasColumnType("int(11)")
                .HasColumnName("idpaises");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdpaisesNavigation).WithMany(p => p.Provincias)
                .HasForeignKey(d => d.Idpaises)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_provincias_paises1");
        });

        modelBuilder.Entity<RelacionIes>(entity =>
        {
            entity.HasKey(e => e.IdRelacionIes).HasName("PRIMARY");

            entity.ToTable("relacion_ies");

            entity.Property(e => e.IdRelacionIes)
                .HasColumnType("int(11)")
                .HasColumnName("idRelacionIes");
            entity.Property(e => e.Nombre)
                .HasMaxLength(60)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<TipoFuncionario>(entity =>
        {
            entity.HasKey(e => e.IdtipoFuncionario).HasName("PRIMARY");

            entity.ToTable("tipo_funcionario");

            entity.Property(e => e.IdtipoFuncionario)
                .HasColumnType("int(11)")
                .HasColumnName("idtipo_funcionario");
            entity.Property(e => e.EsDocente)
                .HasColumnType("bit(1)")
                .HasColumnName("esDocente");
            entity.Property(e => e.Nombre)
                .HasMaxLength(45)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<TipoSangre>(entity =>
        {
            entity.HasKey(e => e.CodigoTipoSangre).HasName("PRIMARY");

            entity.ToTable("tipoSangre");

            entity.Property(e => e.CodigoTipoSangre)
                .HasMaxLength(5)
                .HasColumnName("codigoTipoSangre");
            entity.Property(e => e.Grupo)
                .HasMaxLength(5)
                .HasColumnName("grupo");
            entity.Property(e => e.SitemaRh)
                .HasColumnType("tinyint(4)")
                .HasColumnName("sitemaRH");
        });

        modelBuilder.Entity<TiposBecas>(entity =>
        {
            entity.HasKey(e => e.IdTipoBeca).HasName("PRIMARY");

            entity.ToTable("tipos_becas");

            entity.Property(e => e.IdTipoBeca)
                .HasColumnType("int(11)")
                .HasColumnName("idTipoBeca");
            entity.Property(e => e.Nombre)
                .HasMaxLength(45)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<TiposContratos>(entity =>
        {
            entity.HasKey(e => e.IdtiposContratos).HasName("PRIMARY");

            entity.ToTable("tipos_contratos");

            entity.Property(e => e.IdtiposContratos)
                .HasColumnType("int(11)")
                .HasColumnName("idtipos_contratos");
            entity.Property(e => e.Duracion)
                .HasColumnType("int(11)")
                .HasColumnName("duracion");
            entity.Property(e => e.EsAfiliado)
                .HasColumnType("tinyint(4)")
                .HasColumnName("esAfiliado");
            entity.Property(e => e.Nombre)
                .HasMaxLength(45)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<TitulosEnCurso>(entity =>
        {
            entity.HasKey(e => e.IdTitulosProfesorCurso).HasName("PRIMARY");

            entity.ToTable("titulos_en_curso");

            entity.HasIndex(e => e.IdCampoDetalladoUnesco, "fk_titulos_en_curso_campo_detallado_unesco1_idx");

            entity.HasIndex(e => e.IdFinanciamiento, "fk_titulos_en_curso_financiamiento_beca1_idx");

            entity.HasIndex(e => e.IdGradoAcademico, "fk_titulos_en_curso_grados_academicos1_idx");

            entity.HasIndex(e => e.IdProfesor, "fk_titulos_en_curso_profesores1_idx");

            entity.HasIndex(e => e.IdTipoBeca, "fk_titulos_en_curso_tipos_becas1_idx");

            entity.HasIndex(e => e.IdUniversidad, "fk_titulos_en_curso_universidades1_idx");

            entity.Property(e => e.IdTitulosProfesorCurso)
                .HasColumnType("int(11)")
                .HasColumnName("idTitulosProfesorCurso");
            entity.Property(e => e.FechaInicio).HasColumnName("fecha_inicio");
            entity.Property(e => e.IdCampoDetalladoUnesco)
                .HasColumnType("int(11)")
                .HasColumnName("idCampoDetalladoUnesco");
            entity.Property(e => e.IdFinanciamiento)
                .HasColumnType("int(11)")
                .HasColumnName("idFinanciamiento");
            entity.Property(e => e.IdGradoAcademico)
                .HasColumnType("int(11)")
                .HasColumnName("idGradoAcademico");
            entity.Property(e => e.IdProfesor)
                .IsRequired()
                .HasMaxLength(14)
                .HasColumnName("idProfesor");
            entity.Property(e => e.IdTipoBeca)
                .HasColumnType("int(11)")
                .HasColumnName("idTipoBeca");
            entity.Property(e => e.IdUniversidad)
                .HasColumnType("int(11)")
                .HasColumnName("idUniversidad");
            entity.Property(e => e.MontoBeca)
                .HasPrecision(10, 2)
                .HasColumnName("montoBeca");
            entity.Property(e => e.NombreOtro)
                .HasMaxLength(60)
                .HasColumnName("nombreOtro");
            entity.Property(e => e.PorcentajeBeca)
                .HasColumnType("int(11)")
                .HasColumnName("porcentajeBeca");
            entity.Property(e => e.TieneBeca)
                .HasColumnType("tinyint(4)")
                .HasColumnName("tieneBeca");
            entity.Property(e => e.Titulo)
                .HasMaxLength(200)
                .HasColumnName("titulo");

            entity.HasOne(d => d.IdCampoDetalladoUnescoNavigation).WithMany(p => p.TitulosEnCurso)
                .HasForeignKey(d => d.IdCampoDetalladoUnesco)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_en_curso_campo_detallado_unesco1");

            entity.HasOne(d => d.IdFinanciamientoNavigation).WithMany(p => p.TitulosEnCurso)
                .HasForeignKey(d => d.IdFinanciamiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_en_curso_financiamiento_beca1");

            entity.HasOne(d => d.IdGradoAcademicoNavigation).WithMany(p => p.TitulosEnCurso)
                .HasForeignKey(d => d.IdGradoAcademico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_en_curso_grados_academicos1");

            entity.HasOne(d => d.IdProfesorNavigation).WithMany(p => p.TitulosEnCurso)
                .HasForeignKey(d => d.IdProfesor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_en_curso_profesores1");

            entity.HasOne(d => d.IdTipoBecaNavigation).WithMany(p => p.TitulosEnCurso)
                .HasForeignKey(d => d.IdTipoBeca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_en_curso_tipos_becas1");

            entity.HasOne(d => d.IdUniversidadNavigation).WithMany(p => p.TitulosEnCurso)
                .HasForeignKey(d => d.IdUniversidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_en_curso_universidades1");
        });

        modelBuilder.Entity<TitulosProfesores>(entity =>
        {
            entity.HasKey(e => e.IdTitulosProfesor).HasName("PRIMARY");

            entity.ToTable("titulos_profesores");

            entity.HasIndex(e => e.IdGradoAcademico, "fk_titulos_grados_academicos1_idx");

            entity.HasIndex(e => e.IdProfesor, "fk_titulos_profesores1_idx");

            entity.HasIndex(e => e.IdCampoDetalladoUnesco, "fk_titulos_profesores_campo_detallado_unesco1_idx");

            entity.HasIndex(e => e.IdUniversidad, "fk_titulos_universidades1_idx");

            entity.Property(e => e.IdTitulosProfesor)
                .HasColumnType("int(11)")
                .HasColumnName("idTitulosProfesor");
            entity.Property(e => e.ArchivoTitulo)
                .HasMaxLength(255)
                .HasColumnName("archivoTitulo");
            entity.Property(e => e.CodigoSenescyt)
                .HasMaxLength(90)
                .HasColumnName("codigo_senescyt");
            entity.Property(e => e.FechaObtencion).HasColumnName("fecha_obtencion");
            entity.Property(e => e.FechaRegistro).HasColumnName("fecha_registro");
            entity.Property(e => e.IdCampoDetalladoUnesco)
                .HasColumnType("int(11)")
                .HasColumnName("idCampoDetalladoUnesco");
            entity.Property(e => e.IdGradoAcademico)
                .HasColumnType("int(11)")
                .HasColumnName("idGradoAcademico");
            entity.Property(e => e.IdProfesor)
                .IsRequired()
                .HasMaxLength(14)
                .HasColumnName("idProfesor");
            entity.Property(e => e.IdUniversidad)
                .HasColumnType("int(11)")
                .HasColumnName("idUniversidad");
            entity.Property(e => e.Titulo)
                .HasMaxLength(200)
                .HasColumnName("titulo");
            entity.Property(e => e.Tituloscol)
                .HasMaxLength(45)
                .HasColumnName("tituloscol");

            entity.HasOne(d => d.IdCampoDetalladoUnescoNavigation).WithMany(p => p.TitulosProfesores)
                .HasForeignKey(d => d.IdCampoDetalladoUnesco)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_profesores_campo_detallado_unesco1");

            entity.HasOne(d => d.IdGradoAcademicoNavigation).WithMany(p => p.TitulosProfesores)
                .HasForeignKey(d => d.IdGradoAcademico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_grados_academicos1");

            entity.HasOne(d => d.IdProfesorNavigation).WithMany(p => p.TitulosProfesores)
                .HasForeignKey(d => d.IdProfesor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_profesores1");

            entity.HasOne(d => d.IdUniversidadNavigation).WithMany(p => p.TitulosProfesores)
                .HasForeignKey(d => d.IdUniversidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_titulos_universidades1");
        });

        modelBuilder.Entity<Universidades>(entity =>
        {
            entity.HasKey(e => e.IdUniversidad).HasName("PRIMARY");

            entity.ToTable("universidades");

            entity.HasIndex(e => e.Idpaises, "fk_universidades_paises1_idx");

            entity.Property(e => e.IdUniversidad)
                .HasColumnType("int(11)")
                .HasColumnName("idUniversidad");
            entity.Property(e => e.CodigoSiees)
                .HasMaxLength(100)
                .HasColumnName("codigo_siees");
            entity.Property(e => e.Idpaises)
                .HasColumnType("int(11)")
                .HasColumnName("idpaises");
            entity.Property(e => e.Nombre)
                .HasMaxLength(255)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdpaisesNavigation).WithMany(p => p.Universidades)
                .HasForeignKey(d => d.Idpaises)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_universidades_paises1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}